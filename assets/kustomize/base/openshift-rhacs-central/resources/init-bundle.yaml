---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: roxctl-prereqs
  namespace: stackrox
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: roxctl-prereqs
  namespace: stackrox
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get","create","update","patch"]
  - apiGroups: ["route.openshift.io"]
    resources: ["routes"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: roxctl-prereqs
  namespace: stackrox
subjects:
  - kind: ServiceAccount
    name: roxctl-prereqs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: roxctl-prereqs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: roxctl-prep-script
  namespace: stackrox
data:
  prep.sh: |
    #!/usr/bin/env bash
    set -euo pipefail
    NS="${NAMESPACE:-stackrox}"

    pw_b64="$(oc -n "$NS" get secret central-htpasswd -o jsonpath='{.data.password}')"
    pw_decoded="$(printf %s "$pw_b64" | base64 -d)"
    host="$(oc -n "$NS" get route central -o jsonpath='{.spec.host}')"

    # Create or patch the prerequisites ConfigMap
    oc -n "$NS" create configmap roxctl-prereqs \
      --from-literal=password_b64="$pw_b64" \
      --from-literal=password="$pw_decoded" \
      --from-literal=central_host="$host" \
      --dry-run=client -o yaml | oc apply -f -
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: roxctl-run-script
  namespace: stackrox
data:
  run.sh: |
    #!/usr/bin/env bash
    set -euo pipefail
    # Placeholder for future steps; prints CLI version for now
    roxctl version
---
apiVersion: batch/v1
kind: Job
metadata:
  name: roxctl-prep-and-run
  namespace: stackrox
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: roxctl-prereqs
      restartPolicy: Never
      securityContext:
        seccompProfile: { type: RuntimeDefault }
      initContainers:
        - name: prereqs
          image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args: ["/scripts/prep.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: prep-script
              mountPath: /scripts
          securityContext:
            allowPrivilegeEscalation: false
      containers:
        - name: roxctl
          image: registry.redhat.io/advanced-cluster-security/rhacs-roxctl-rhel8:4.8
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh","-c"]
          args: ["/scripts/run.sh"]
          volumeMounts:
            - name: run-script
              mountPath: /scripts
          securityContext:
            allowPrivilegeEscalation: false
      volumes:
        - name: prep-script
          configMap:
            name: roxctl-prep-script
            defaultMode: 0755
        - name: run-script
          configMap:
            name: roxctl-run-script
            defaultMode: 0755
