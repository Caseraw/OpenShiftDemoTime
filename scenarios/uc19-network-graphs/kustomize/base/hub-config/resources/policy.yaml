---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: install-ocp-gitops
  namespace: spoke-config
  annotations:
    policy.open-cluster-management.io/description: Install GitOps Operator
    policy.open-cluster-management.io/categories: ""
    policy.open-cluster-management.io/standards: ""
    policy.open-cluster-management.io/controls: ""
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1beta1
        kind: OperatorPolicy
        metadata:
          name: install-ocp-gitops
        spec:
          remediationAction: enforce
          severity: high
          complianceType: musthave
          subscription:
            name: openshift-gitops-operator
            namespace: openshift-gitops-operator
            channel: latest
            source: redhat-operators
            sourceNamespace: openshift-marketplace
          upgradeApproval: Automatic
          versions:
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: install-ocp-pipelines
  namespace: spoke-config
  annotations:
    policy.open-cluster-management.io/description: Install OpenShift Pipelines Operator
    policy.open-cluster-management.io/categories: ""
    policy.open-cluster-management.io/standards: ""
    policy.open-cluster-management.io/controls: ""
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1beta1
        kind: OperatorPolicy
        metadata:
          name: install-ocp-pipelines
        spec:
          remediationAction: enforce
          severity: high
          complianceType: musthave
          subscription:
            name: openshift-pipelines-operator-rh
            namespace: openshift-operators
            channel: latest
            source: redhat-operators
            sourceNamespace: openshift-marketplace
          upgradeApproval: Automatic
          versions:
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: install-ocp-logging
  namespace: spoke-config
  annotations:
    policy.open-cluster-management.io/description: Installe the OpenShift Logging Operator
    policy.open-cluster-management.io/categories: ""
    policy.open-cluster-management.io/standards: ""
    policy.open-cluster-management.io/controls: ""
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1beta1
        kind: OperatorPolicy
        metadata:
          name: install-ocp-logging
        spec:
          remediationAction: enforce
          severity: high
          complianceType: musthave
          subscription:
            name: cluster-logging
            namespace: openshift-logging
            channel: stable-6.3
            source: redhat-operators
            sourceNamespace: openshift-marketplace
          upgradeApproval: Automatic
          versions:
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: install-loki
  namespace: spoke-config
  annotations:
    policy.open-cluster-management.io/description: Install Loki Operator
    policy.open-cluster-management.io/categories: ""
    policy.open-cluster-management.io/standards: ""
    policy.open-cluster-management.io/controls: ""
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1beta1
        kind: OperatorPolicy
        metadata:
          name: install-loki
        spec:
          remediationAction: enforce
          severity: high
          complianceType: musthave
          subscription:
            name: loki-operator
            namespace: openshift-operators-redhat
            channel: stable-6.3
            source: redhat-operators
            sourceNamespace: openshift-marketplace
          upgradeApproval: Automatic
          versions:
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: install-coo
  namespace: spoke-config
  annotations:
    policy.open-cluster-management.io/description: Install the Cluster Observability Operator
    policy.open-cluster-management.io/categories: ""
    policy.open-cluster-management.io/standards: ""
    policy.open-cluster-management.io/controls: ""
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1beta1
        kind: OperatorPolicy
        metadata:
          name: install-coo
        spec:
          remediationAction: enforce
          severity: high
          complianceType: musthave
          subscription:
            name: cluster-observability-operator
            namespace: openshift-cluster-observability-operator
            channel: stable
            source: redhat-operators
            sourceNamespace: openshift-marketplace
          upgradeApproval: Automatic
          versions:
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: openshift-monitoring-enableuserworkload
  namespace: spoke-config
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: openshift-monitoring-enableuserworkload
        spec:
          remediationAction: enforce
          object-templates:
            # SA
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ServiceAccount
                metadata:
                  name: openshift-monitoring-enableuserworkload
                  namespace: openshift-monitoring

            # RBAC (configmaps)
            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: Role
                metadata:
                  name: openshift-monitoring-enableuserworkload
                  namespace: openshift-monitoring
                rules:
                  - apiGroups: [""]
                    resources: ["configmaps"]
                    verbs: ["get","list","create","update","patch"]

            - complianceType: musthave
              objectDefinition:
                apiVersion: rbac.authorization.k8s.io/v1
                kind: RoleBinding
                metadata:
                  name: openshift-monitoring-enableuserworkload
                  namespace: openshift-monitoring
                subjects:
                  - kind: ServiceAccount
                    name: openshift-monitoring-enableuserworkload
                    namespace: openshift-monitoring
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: Role
                  name: openshift-monitoring-enableuserworkload

            # Job (fixed 'apply', adds both keys)
            - complianceType: musthave
              objectDefinition:
                apiVersion: batch/v1
                kind: Job
                metadata:
                  name: openshift-monitoring-enableuserworkload
                  namespace: openshift-monitoring
                  labels:
                    patcher: "true"
                  annotations:
                    policy.open-cluster-management.io/created-by: "openshift-monitoring-enableuserworkload"
                    script-version: "v8"
                spec:
                  backoffLimit: 0
                  activeDeadlineSeconds: 180
                  template:
                    spec:
                      serviceAccountName: openshift-monitoring-enableuserworkload
                      restartPolicy: Never
                      containers:
                        - name: patch
                          image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
                          command: ["/bin/bash","-ceu","--"]
                          args:
                            - |
                              set -euo pipefail
                              NS=openshift-monitoring
                              CM=cluster-monitoring-config

                              # Read existing embedded YAML (may be empty)
                              CUR="$(oc -n "$NS" get cm "$CM" -o jsonpath='{.data.config\.yaml}' 2>/dev/null || true || :)"
                              CUR="$(printf "%s" "${CUR:-}" | tr -d '\r')"

                              # Ensure trailing newline so we never glue our key to the last line
                              ensure_nl() { if [ -n "${1-}" ] && [ "${1: -1}" != $'\n' ]; then printf "%s\n" "$1"; else printf "%s" "$1"; fi; }

                              # 1) scrub any existing occurrences we manage
                              CLEAN="$(printf "%s" "$(ensure_nl "${CUR:-}")" | awk '
                                /^[[:space:]]*enableUserWorkload[[:space:]]*:/ {next}
                                /^[[:space:]]+enableUserAlertmanagerConfig[[:space:]]*:/ {next}
                                {print}
                              ')"

                              # 2) ensure alertmanagerMain section + nested key
                              CLEAN="$(printf "%s" "$CLEAN" | sed -E 's/^[[:space:]]*alertmanagerMain:[[:space:]]*\{\}[[:space:]]*$/alertmanagerMain:/')"
                              if printf "%s\n" "$CLEAN" | grep -qE '^[[:space:]]*alertmanagerMain:[[:space:]]*$'; then
                                CLEAN="$(printf "%s\n" "$CLEAN" | awk '
                                  BEGIN{insec=0; inserted=0}
                                  /^[[:space:]]*alertmanagerMain:[[:space:]]*$/ { print; insec=1; next }
                                  insec && /^[^[:space:]]/ { if(!inserted){ print "  enableUserAlertmanagerConfig: true"; inserted=1 } ; insec=0 }
                                  { print }
                                  END { if(insec && !inserted) print "  enableUserAlertmanagerConfig: true" }
                                ')"
                              else
                                CLEAN="$(ensure_nl "$CLEAN")"$'alertmanagerMain:\n  enableUserAlertmanagerConfig: true\n'
                              fi

                              # 3) put enableUserWorkload: true at the top (deterministic)
                              NEW="enableUserWorkload: true"$'\n'"$CLEAN"

                              # 4) build manifest (correct 4-space indent) and apply
                              TMP="$(mktemp)"
                              {
                                printf '%s\n' \
                                  'apiVersion: v1' \
                                  'kind: ConfigMap' \
                                  'metadata:' \
                                  '  name: cluster-monitoring-config' \
                                  '  namespace: openshift-monitoring' \
                                  'data:' \
                                  '  config.yaml: |'
                                printf "%s" "$NEW" | sed 's/^/    /'
                                echo
                              } > "$TMP"

                              echo "Applying updated ConfigMap (script-version v8)..."
                              oc apply -f "$TMP"
                              echo "Done."
